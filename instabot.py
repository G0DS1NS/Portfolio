import time
import schedule
from instagrapi import Client
from instagrapi.exceptions import LoginRequired, ClientError
from config import USERNAME, PASSWORD, LIMITS


class InstagramBot:
    def __init__(self):
        self.cl = Client()
        self.login()


    def login(self):
        try:
            self.cl.login(USERNAME, PASSWORD)
            self.cl.dump_settings("session.json")
            print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç")
        except LoginRequired as e:
            print(f"‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –≤—Ö–æ–¥: {e}")
            exit()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {e}")
            exit()

    def log(self, action, username=None, is_error=False):
        log_type = "ERROR" if is_error else "INFO"
        with open("bot.log", "a") as f:
            f.write(f"{time.ctime()} | {log_type} | {action} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n")

    def send_message(self, user_id, text):
        try:
            if LIMITS["messages_per_hour"] <= 0:
                self.log("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π", is_error=True)
                return

            self.cl.direct_send(text=text, user_ids=[user_id])
            self.log("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", self.cl.user_info(user_id).username)
            LIMITS["messages_per_hour"] -= 1
            time.sleep(max(30, 3600 / LIMITS["messages_per_hour"]))  # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        except ClientError as e:
            self.log(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}", is_error=True)

    def like_comments(self, post_id):
        try:
            comments = self.cl.media_comments(post_id, amount=10)
            for comment in comments:
                if LIMITS["likes_per_hour"] <= 0:
                    self.log("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ª–∞–π–∫–æ–≤", is_error=True)
                    break

                if not comment.has_liked:
                    self.cl.comment_like(int(comment.pk))
                    self.log("–õ–∞–π–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è", comment.user.username)
                    LIMITS["likes_per_hour"] -= 1
                    time.sleep(15)
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ª–∞–π–∫–æ–≤: {e}", is_error=True)

    def check_followers(self):
        try:
            followers = self.cl.user_followers(str(self.cl.user_id))
            for user in followers.values():
                self.send_message(user.pk, "–ü—Ä–∏–≤–µ—Ç! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! üéâ")
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {e}", is_error=True)

    def run(self):
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        schedule.every(2).hours.do(self.job)
        while True:
            schedule.run_pending()
            time.sleep(1)

    def job(self):
        posts = self.cl.user_medias(str(self.cl.user_id), amount=5)
        for post in posts:
            self.like_comments(post.pk)
        self.check_followers()


if __name__ == "__main__":
    bot = InstagramBot()
    bot.run()